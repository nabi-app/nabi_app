import 'dart:math';

import 'package:flutter/material.dart';
import 'package:flutter/services.dart';
import 'package:injectable/injectable.dart';
import 'package:nabi_app/utils/ui/assets.gen.dart';
import 'package:nabi_app/utils/ui/ui_theme.dart';

@injectable
class NabiCustomViewModel extends ChangeNotifier {
  NabiCustomViewModel() {
    _loadNabiImage();
  }

  List<({String name, Color innerColor, Color borderColor})> colors = const [
    (
      name: "옐로우",
      innerColor: colorFFE658,
      borderColor: colorE0CC58,
    ),
    (
      name: "사이언",
      innerColor: color53E9FF,
      borderColor: color4CD1E5,
    ),
    (
      name: "그린",
      innerColor: color5BFF58,
      borderColor: color53E450,
    ),
    (
      name: "레드",
      innerColor: colorFF5858,
      borderColor: colorDE4F4F,
    ),
    (
      name: "오렌지",
      innerColor: colorFF9D29,
      borderColor: colorE38D27,
    ),
  ];

  String _nabiName = "";

  String get nabiName => _nabiName;

  int _topWingColorIndex = 0;

  int get topWingColorIndex => _topWingColorIndex;

  int _previousTopWingColorIndex = 0;

  int _bottomWingColorIndex = 0;

  int get bottomWingColorIndex => _bottomWingColorIndex;

  int _previousBottomWingColorIndex = 0;

  String? _nabiSvgContent;

  String? get nabiSvgContent => _nabiSvgContent;

  Future<void> _loadNabiImage() async {
    final path = Assets.svg.iconNabi.path;
    _nabiSvgContent = await rootBundle.loadString(path);
    notifyListeners();
  }

  void onNabiNameChanged(String value) {
    _nabiName = value;
    notifyListeners();
  }

  void onTopWingColorChanged(int index) {
    _setTopWingColorIndex(index);
    _changeWingColor();
    notifyListeners();
  }

  void onBottomWingColorChanged(int index) {
    _setBottomWingColorIndex(index);
    _changeWingColor();
    notifyListeners();
  }

  void _setTopWingColorIndex(int index) {
    _previousTopWingColorIndex = _topWingColorIndex;
    _topWingColorIndex = index;
  }

  void _setBottomWingColorIndex(int index) {
    _previousBottomWingColorIndex = _bottomWingColorIndex;
    _bottomWingColorIndex = index;
  }

  void _changeWingColor() {
    final previousTopWingColorValue =
        colors[_previousTopWingColorIndex].innerColor.value.toRadixString(16).substring(2).toUpperCase();
    final previousBottomWingColorValue =
        colors[_previousBottomWingColorIndex].innerColor.value.toRadixString(16).substring(2).toUpperCase();

    final topWingColorValue = colors[_topWingColorIndex].innerColor.value.toRadixString(16).substring(2).toUpperCase();
    final bottomWingColorValue =
        colors[_bottomWingColorIndex].innerColor.value.toRadixString(16).substring(2).toUpperCase();

    _nabiSvgContent = _nabiSvgContent!.replaceAll(
      '''<path d="M56.8945 29.7354C58.321 33.7001 48.4049 47.7748 33.6803 47.7748C25.6895 47.7748 19.2051 45.9312 19.2051 40.1526C19.2051 35.9401 25.7892 30.3499 33.4708 28.1693C41.8307 25.8004 54.6 23.3721 56.8945 29.7354Z" fill="#$previousTopWingColorValue"/>
<path d="M35.3862 58.8264C37.5459 58.8264 39.2968 57.2732 39.2968 55.3573C39.2968 53.4414 37.5459 51.8882 35.3862 51.8882C33.2264 51.8882 31.4756 53.4414 31.4756 55.3573C31.4756 57.2732 33.2264 58.8264 35.3862 58.8264Z" fill="#$previousTopWingColorValue"/>
<path d="M66.6309 33.8686C68.5813 33.8686 70.1624 32.5196 70.1624 30.8555C70.1624 29.1913 68.5813 27.8423 66.6309 27.8423C64.6805 27.8423 63.0994 29.1913 63.0994 30.8555C63.0994 32.5196 64.6805 33.8686 66.6309 33.8686Z" fill="#$previousTopWingColorValue"/>
<path d="M84.9768 34.691C79.9589 34.7604 72.826 36.5049 67.419 37.7537C62.012 38.9927 53.8317 42.6898 50.3601 45.8516C46.3896 49.4595 44.7835 52.8791 43.4567 55.8526C42.1298 58.8261 40.9627 62.4637 40.7133 67.5881C40.4639 72.7125 43.4567 78.9172 43.4567 78.9172C43.4567 78.9172 46.1003 83.3577 47.5368 84.8444C48.9734 86.3312 51.4674 88.4325 53.7818 89.1461C56.0963 89.8598 58.9594 90.4248 62.2016 89.612C65.4438 88.8091 67.1197 87.9765 69.4641 86.2519C71.8085 84.5273 74.931 81.1176 77.9238 78.828C80.9166 76.5384 89.7154 71.077 89.7154 71.077C89.7154 71.077 100.031 65.4372 103.522 63.782C107.014 62.1267 117.419 57.4979 118.746 57.0023C118.746 57.0023 120.003 56.3184 120.811 55.922C121.968 55.357 123.155 53.672 123.594 52.5421C124.222 50.9264 123.724 49.2514 123.155 48.4485C122.586 47.6457 120.282 46.714 118.845 46.03C118.845 46.03 113.169 43.5818 111.104 42.5907C109.039 41.5995 102.744 38.8539 99.7313 37.6546C97.0777 36.5941 88.6181 34.6315 84.9569 34.6811L84.9768 34.691Z" fill="#$previousTopWingColorValue"/>''',
      '''<path d="M56.8945 29.7354C58.321 33.7001 48.4049 47.7748 33.6803 47.7748C25.6895 47.7748 19.2051 45.9312 19.2051 40.1526C19.2051 35.9401 25.7892 30.3499 33.4708 28.1693C41.8307 25.8004 54.6 23.3721 56.8945 29.7354Z" fill="#$topWingColorValue"/>
<path d="M35.3862 58.8264C37.5459 58.8264 39.2968 57.2732 39.2968 55.3573C39.2968 53.4414 37.5459 51.8882 35.3862 51.8882C33.2264 51.8882 31.4756 53.4414 31.4756 55.3573C31.4756 57.2732 33.2264 58.8264 35.3862 58.8264Z" fill="#$topWingColorValue"/>
<path d="M66.6309 33.8686C68.5813 33.8686 70.1624 32.5196 70.1624 30.8555C70.1624 29.1913 68.5813 27.8423 66.6309 27.8423C64.6805 27.8423 63.0994 29.1913 63.0994 30.8555C63.0994 32.5196 64.6805 33.8686 66.6309 33.8686Z" fill="#$topWingColorValue"/>
<path d="M84.9768 34.691C79.9589 34.7604 72.826 36.5049 67.419 37.7537C62.012 38.9927 53.8317 42.6898 50.3601 45.8516C46.3896 49.4595 44.7835 52.8791 43.4567 55.8526C42.1298 58.8261 40.9627 62.4637 40.7133 67.5881C40.4639 72.7125 43.4567 78.9172 43.4567 78.9172C43.4567 78.9172 46.1003 83.3577 47.5368 84.8444C48.9734 86.3312 51.4674 88.4325 53.7818 89.1461C56.0963 89.8598 58.9594 90.4248 62.2016 89.612C65.4438 88.8091 67.1197 87.9765 69.4641 86.2519C71.8085 84.5273 74.931 81.1176 77.9238 78.828C80.9166 76.5384 89.7154 71.077 89.7154 71.077C89.7154 71.077 100.031 65.4372 103.522 63.782C107.014 62.1267 117.419 57.4979 118.746 57.0023C118.746 57.0023 120.003 56.3184 120.811 55.922C121.968 55.357 123.155 53.672 123.594 52.5421C124.222 50.9264 123.724 49.2514 123.155 48.4485C122.586 47.6457 120.282 46.714 118.845 46.03C118.845 46.03 113.169 43.5818 111.104 42.5907C109.039 41.5995 102.744 38.8539 99.7313 37.6546C97.0777 36.5941 88.6181 34.6315 84.9569 34.6811L84.9768 34.691Z" fill="#$topWingColorValue"/>''',
    );
    _nabiSvgContent = _nabiSvgContent!.replaceAll(
      '''<path d="M206.106 29.7354C204.679 33.7001 214.595 47.7748 229.32 47.7748C237.311 47.7748 243.795 45.9312 243.795 40.1526C243.795 35.9401 237.211 30.3499 229.529 28.1693C221.169 25.8004 208.4 23.3721 206.106 29.7354Z" fill="#$previousTopWingColorValue"/>
<path d="M227.614 58.8264C229.774 58.8264 231.525 57.2732 231.525 55.3573C231.525 53.4414 229.774 51.8882 227.614 51.8882C225.454 51.8882 223.703 53.4414 223.703 55.3573C223.703 57.2732 225.454 58.8264 227.614 58.8264Z" fill="#$previousTopWingColorValue"/>
<path d="M196.369 33.8686C198.319 33.8686 199.9 32.5196 199.9 30.8555C199.9 29.1913 198.319 27.8423 196.369 27.8423C194.419 27.8423 192.837 29.1913 192.837 30.8555C192.837 32.5196 194.419 33.8686 196.369 33.8686Z" fill="#$previousTopWingColorValue"/>
<path d="M178.023 34.691C183.041 34.7604 190.174 36.5049 195.581 37.7537C200.988 38.9927 209.168 42.6898 212.64 45.8516C216.61 49.4595 218.216 52.8791 219.543 55.8526C220.87 58.8261 222.037 62.4637 222.287 67.5881C222.536 72.7125 219.543 78.9172 219.543 78.9172C219.543 78.9172 216.9 83.3577 215.463 84.8444C214.026 86.3312 211.532 88.4325 209.218 89.1461C206.904 89.8598 204.041 90.4248 200.798 89.612C197.556 88.8091 195.88 87.9765 193.536 86.2519C191.191 84.5273 188.069 81.1176 185.076 78.828C182.083 76.5384 173.284 71.077 173.284 71.077C173.284 71.077 162.969 65.4372 159.478 63.782C155.986 62.1267 145.581 57.4979 144.254 57.0023C144.254 57.0023 142.997 56.3184 142.189 55.922C141.032 55.357 139.845 53.672 139.406 52.5421C138.777 50.9264 139.276 49.2514 139.845 48.4485C140.414 47.6457 142.718 46.714 144.155 46.03C144.155 46.03 149.831 43.5818 151.896 42.5907C153.961 41.5995 160.256 38.8539 163.269 37.6546C165.922 36.5941 174.382 34.6315 178.043 34.6811L178.023 34.691Z" fill="#$previousTopWingColorValue"/>''',
      '''<path d="M206.106 29.7354C204.679 33.7001 214.595 47.7748 229.32 47.7748C237.311 47.7748 243.795 45.9312 243.795 40.1526C243.795 35.9401 237.211 30.3499 229.529 28.1693C221.169 25.8004 208.4 23.3721 206.106 29.7354Z" fill="#$topWingColorValue"/>
<path d="M227.614 58.8264C229.774 58.8264 231.525 57.2732 231.525 55.3573C231.525 53.4414 229.774 51.8882 227.614 51.8882C225.454 51.8882 223.703 53.4414 223.703 55.3573C223.703 57.2732 225.454 58.8264 227.614 58.8264Z" fill="#$topWingColorValue"/>
<path d="M196.369 33.8686C198.319 33.8686 199.9 32.5196 199.9 30.8555C199.9 29.1913 198.319 27.8423 196.369 27.8423C194.419 27.8423 192.837 29.1913 192.837 30.8555C192.837 32.5196 194.419 33.8686 196.369 33.8686Z" fill="#$topWingColorValue"/>
<path d="M178.023 34.691C183.041 34.7604 190.174 36.5049 195.581 37.7537C200.988 38.9927 209.168 42.6898 212.64 45.8516C216.61 49.4595 218.216 52.8791 219.543 55.8526C220.87 58.8261 222.037 62.4637 222.287 67.5881C222.536 72.7125 219.543 78.9172 219.543 78.9172C219.543 78.9172 216.9 83.3577 215.463 84.8444C214.026 86.3312 211.532 88.4325 209.218 89.1461C206.904 89.8598 204.041 90.4248 200.798 89.612C197.556 88.8091 195.88 87.9765 193.536 86.2519C191.191 84.5273 188.069 81.1176 185.076 78.828C182.083 76.5384 173.284 71.077 173.284 71.077C173.284 71.077 162.969 65.4372 159.478 63.782C155.986 62.1267 145.581 57.4979 144.254 57.0023C144.254 57.0023 142.997 56.3184 142.189 55.922C141.032 55.357 139.845 53.672 139.406 52.5421C138.777 50.9264 139.276 49.2514 139.845 48.4485C140.414 47.6457 142.718 46.714 144.155 46.03C144.155 46.03 149.831 43.5818 151.896 42.5907C153.961 41.5995 160.256 38.8539 163.269 37.6546C165.922 36.5941 174.382 34.6315 178.043 34.6811L178.023 34.691Z" fill="#$topWingColorValue"/>''',
    );
    _nabiSvgContent = _nabiSvgContent!.replaceAll(
      '<path d="M97.4368 71.0278C104.081 67.3505 121.17 59.1237 122.786 58.8363C124.402 58.5489 124.412 61.4827 125.16 65.6952C125.908 69.9077 125.589 72.5046 125.16 75.3691C124.621 78.9671 123.873 84.5474 123.494 89.1662C123.115 93.7851 121.379 104.51 120.501 108.524C119.284 114.094 117.798 118.654 116.301 122.123C114.805 125.592 111.563 128.575 109.438 130.31C107.313 132.044 103.193 133.66 99.7014 133.908C96.2098 134.156 90.9624 132.421 86.7226 130.558C82.4828 128.694 77.6145 125.473 75.2402 123.61C72.8659 121.746 71.2498 118.029 70.1624 115.175C69.075 112.32 69.1349 107.116 69.2446 105.134C69.4541 101.378 70.4916 95.9558 71.16 93.3094C71.7686 90.9008 72.3372 88.1652 73.8635 86.6586C78.8914 81.7027 91.8702 74.1004 97.4368 71.0278Z" fill="#$previousBottomWingColorValue"/>',
      '<path d="M97.4368 71.0278C104.081 67.3505 121.17 59.1237 122.786 58.8363C124.402 58.5489 124.412 61.4827 125.16 65.6952C125.908 69.9077 125.589 72.5046 125.16 75.3691C124.621 78.9671 123.873 84.5474 123.494 89.1662C123.115 93.7851 121.379 104.51 120.501 108.524C119.284 114.094 117.798 118.654 116.301 122.123C114.805 125.592 111.563 128.575 109.438 130.31C107.313 132.044 103.193 133.66 99.7014 133.908C96.2098 134.156 90.9624 132.421 86.7226 130.558C82.4828 128.694 77.6145 125.473 75.2402 123.61C72.8659 121.746 71.2498 118.029 70.1624 115.175C69.075 112.32 69.1349 107.116 69.2446 105.134C69.4541 101.378 70.4916 95.9558 71.16 93.3094C71.7686 90.9008 72.3372 88.1652 73.8635 86.6586C78.8914 81.7027 91.8702 74.1004 97.4368 71.0278Z" fill="#$bottomWingColorValue"/>',
    );
    _nabiSvgContent = _nabiSvgContent!.replaceAll(
      '''<path d="M165.563 71.0278C158.919 67.3505 141.83 59.1237 140.214 58.8363C138.598 58.5489 138.588 61.4827 137.84 65.6952C137.091 69.9077 137.411 72.5046 137.84 75.3691C138.378 78.9671 139.127 84.5474 139.506 89.1662C139.885 93.7851 141.621 104.51 142.498 108.524C143.716 114.094 145.202 118.654 146.698 122.123C148.195 125.592 151.437 128.575 153.562 130.31C155.687 132.044 159.807 133.66 163.298 133.908C166.79 134.156 172.037 132.421 176.277 130.558C180.517 128.694 185.385 125.473 187.76 123.61C190.134 121.746 191.75 118.029 192.837 115.175C193.925 112.32 193.865 107.116 193.755 105.134C193.546 101.378 192.508 95.9558 191.84 93.3094C191.231 90.9008 190.663 88.1652 189.136 86.6586C184.108 81.7027 171.13 74.1004 165.563 71.0278Z" fill="#$previousBottomWingColorValue"/>''',
      '''<path d="M165.563 71.0278C158.919 67.3505 141.83 59.1237 140.214 58.8363C138.598 58.5489 138.588 61.4827 137.84 65.6952C137.091 69.9077 137.411 72.5046 137.84 75.3691C138.378 78.9671 139.127 84.5474 139.506 89.1662C139.885 93.7851 141.621 104.51 142.498 108.524C143.716 114.094 145.202 118.654 146.698 122.123C148.195 125.592 151.437 128.575 153.562 130.31C155.687 132.044 159.807 133.66 163.298 133.908C166.79 134.156 172.037 132.421 176.277 130.558C180.517 128.694 185.385 125.473 187.76 123.61C190.134 121.746 191.75 118.029 192.837 115.175C193.925 112.32 193.865 107.116 193.755 105.134C193.546 101.378 192.508 95.9558 191.84 93.3094C191.231 90.9008 190.663 88.1652 189.136 86.6586C184.108 81.7027 171.13 74.1004 165.563 71.0278Z" fill="#$bottomWingColorValue"/>''',
    );

    notifyListeners();
  }

  void shuffleColor() {
    final random = Random();
    final randomTopWingColorIndex = random.nextInt(colors.length);
    final randomBottomWingColorIndex = random.nextInt(colors.length);

    _setTopWingColorIndex(randomTopWingColorIndex);
    _setBottomWingColorIndex(randomBottomWingColorIndex);
    _changeWingColor();
    notifyListeners();
  }
}
